/*
================================================================================
  MODERN & DYNAMIC MESSAGE LAYOUT v23 by AI Archaea
================================================================================
  AUTHORS: AI Archaea & AI Assistant(Gemini Pro 2.5)
  LAST UPDATED: June 30, 2025

  FEATURES:
  - Large and small avatars with word wrapping
  - Header with avatar and ability to reposition image 
  - repositioned meta info
  - Fixed positioning during swipe animations
  - Support for reasoning blocks without button overlap
  - State-aware reasoning block styling (edit/view/closed states)
  - Independent positioning controls for all reasoning elements
  - Dynamic reasoning edit button positioning based on avatar size
================================================================================
*/


/* --- Step 1: GLOBAL CUSTOMIZATION VARIABLES --- */
/* Tweak these values to change the entire layout! */
/* ----------------------------------------------- */
:root {
    /* -- Layout & Sizing -- */
    /*--avatar-width: 304px; */             /* DEPRECATED: Now controlled by index.js */
    --avatar-left-margin: 0px;              /* Space on the far left of the avatar. */
    --avatar-right-margin: 20px;            /* Space between avatar and text. */
    --avatar-border: none;                  /* e.g., '2px solid #555' or 'none'. */
    --header-height: 100px;                 /* Reserved space at the top for the header. */
    --info-block-left-padding: 1px;         /* Nudges the entire info area (both blocks). */
    --timestamp-icon-gap: 5px;              /* Space between timestamp text and its icon. */

    /* -- This is the BASE calculation for the left position of the info blocks -- */
    --info-block-base-left: calc(var(--avatar-width) + var(--avatar-right-margin) + var(--avatar-left-margin) + var(--info-block-left-padding));

    /* -- Independent Name Block Styling -- */
    --header-name-font: "Brillant", serif;
    --header-name-size: 24px;
    --header-name-color: var(--SmartThemeBodyColor);
    --header-name-glow: 0 0 7px #FFFFE0;
    --name-top-position: 6px;               /* Vertical position for the Name. */
    --timestamp-top-position: 25px;         /* Vertical position for the Timestamp. */

    /* -- Metadata Block Styling -- */
    --metadata-font-size: calc(var(--mainFontSize) * 0.75);
    --metadata-font-weight: 400;
    --metadata-start-top: 45px;             /* Vertical start position for the entire metadata block. */
    --metadata-line-height: 16px;           /* The space between each line of metadata. */
    --metadata-horizontal-offset: -10px;    /* Nudges the metadata block left/right relative to the name. */

    /* -- Independent Button Positioning -- */
    --buttons-top-offset: 90px;             /* Vertical offset for the main buttons. */
    --buttons-right-offset: 5px;           /* Horizontal offset for the main buttons. */
    /*--edit-buttons-top-offset: 390px;*/   /* DEPRECATED: Now controlled by index.js */
    --edit-buttons-right-offset: 25px;      /* Horizontal offset for the edit buttons. */
    
      /* -- Reasoning Edit Button Offset Calculations -- */
    /* These handle the container anchor differences between main edit and reasoning edit buttons */
    --reasoning-edit-top-compensation: -100px;    /* Compensation for different container anchoring */
    --reasoning-edit-right-compensation: -40px;   /* Compensation for different container anchoring */
    
    /* -- Reasoning Block Controls -- */
    --reasoning-actions-offset: 15px;       /* How far down to push reasoning actions */
    --reasoning-button-space: 60px;         /* Space to reserve for reasoning buttons */
    --reasoning-actions-right-offset: -2px; /* Right positioning for reasoning action buttons */
    --reasoning-header-width: 280px;        /* Fixed width for reasoning header block */
    --reasoning-header-right-offset: 100px; /* Right offset for reasoning header */
    --reasoning-textarea-right-margin: 10px; /* Right margin for reasoning textarea */
  }

  /* --- Step 2: CORE MESSAGE STRUCTURE (Correct Float Method) --- */
  /* This structure is based on your confirmed working snippet.      */
  /* --------------------------------------------------------------- */

  .mes {
    display: block !important;
    position: relative !important;
    padding-top: var(--header-height) !important;
    margin-top: 5px !important;
    overflow: visible !important;

  }

  .mes .mesAvatarWrapper {
    display: inline !important;
    float: left !important;
    width: var(--avatar-width) !important;
    margin-left: var(--avatar-left-margin) !important;
    margin-right: var(--avatar-right-margin) !important;
    margin-top: calc(-1 * var(--header-height) + 10px) !important;
    position: relative;
    z-index: 10;
  }

  .last_mes .mesAvatarWrapper {
    padding-bottom: 0px !important;
  }

  .mes .mes_block {
    display: block !important; /* Changed from flex to block */
    overflow-x: visible !important; /* Key for word wrap fix! */
    transform: none !important; /* Override SillyTavern's swipe transforms */
  }


  
  /* --- Step 3: AVATAR & HEADER BANNER STYLING --- */
/* Controls for the avatar image, mask, and header background. */
/* ----------------------------------------------------------- */

  .mes .avatar,
  .mes .avatar img {
    width: 100% !important;
    height: auto !important;
    object-fit: cover;
	margin-top: -5px !important;   /* -5px for flush w/.mes  */
	margin-left: -7px !important;  /* -7px for flush */

  }

  .mes .avatar img {
    border: var(--avatar-border) !important;
	-webkit-mask-image:
  radial-gradient(ellipse at center, black 60%, transparent 100%), /* Mask 1 */
  linear-gradient(to bottom, black 80%, transparent 100%),      /* Mask 2 */
  linear-gradient(to right,  black 85%, transparent 100%);      /* Mask 3 */
    -webkit-mask-composite: source-in;
	mask-image:
  radial-gradient(ellipse at center, black 60%, transparent 100%),
  linear-gradient(to bottom, black 80%, transparent 100%),
  linear-gradient(to right,  black 85%, transparent 100%);
	mask-composite: intersect;
	mask-repeat: no-repeat;

}

  .mes[is_user="false"]::before,
  .mes[is_user="true"]::before {
    content: "";
    position: absolute;
    top: 0;
    right: 0;
    width: 60%;
    height: calc(var(--header-height) + 10px);
    background-image: var(--mes-avatar-url) !important;
    background-size: cover !important;
  -webkit-mask-image:
    linear-gradient(to left, black 60%, transparent 100%),
    linear-gradient(to bottom, black 85%, transparent 100%);
  -webkit-mask-composite: intersect;

  mask-image:
	radial-gradient(ellipse at center, black 60%, transparent 100%),
    linear-gradient(to left, black 80%, transparent 100%),
    linear-gradient(to bottom, black 85%, transparent 100%);
  mask-composite: intersect;
  mask-repeat: no-repeat;
    opacity: 0.8;
    z-index: 0;
  }
  .mes[is_user="false"]::before { background-position: center var(--character-banner-pos, 27%) !important; }
  .mes[is_user="true"]::before  { background-position: center var(--persona-banner-pos, 15%) !important; }

/* --- Step 4: REPOSITIONED INFO BLOCK (NAME, TIME, METADATA) --- */
/* The two-block system for all the info text in the header.       */
/* --------------------------------------------------------------- */

/* Part A: The Timestamp Container (Flexbox Fix) */
  .mes .ch_name {
    position: absolute !important;
    left: var(--info-block-base-left) !important;
    top: var(--timestamp-top-position) !important;
    z-index: 5 !important;
    display: flex !important;
    align-items: center !important;
    gap: var(--timestamp-icon-gap) !important;
    height: auto !important;
    margin: 0 !important;
    overflow: visible !important;
    width: calc(100% - var(--info-block-base-left));
    justify-content: space-between;
    transform: none !important; /* Prevent transform inheritance */
  }

  .ch_name .flex1 {
  	min-height: 40px; /* freeze to fix pixel shift when mes editing */
}

/* Part B: The Character Name (Styled Independently) */
  .mes .name_text {
    position: absolute !important;
    left: 0 !important;
    top: calc(var(--name-top-position) - var(--timestamp-top-position)) !important;
    z-index: 6 !important;
    margin: 0 !important;
    font-family: var(--header-name-font) !important;
    font-size: var(--header-name-size) !important;
    color: var(--header-name-color) !important;
    transform: none !important; /* Prevent transform inheritance */
    /* text-shadow: var(--header-name-glow) !important; */
  }

/* Part C: Timestamp, Icon, & Metadata Stack (Theme Integrated) */
  .mes .timestamp,
  .mes .timestamp-icon {
    position: static !important;

  }

  .mes .timestamp,
  .mes .timestamp-icon,
  .mes .mesIDDisplay,
  .mes .tokenCounterDisplay,
  .mes .mes_timer {
    font-size: var(--metadata-font-size) !important;
    font-weight: var(--metadata-font-weight) !important;
    color: var(--SmartThemeBodyColor) !important;
    text-shadow: 0px 0px calc(var(--shadowWidth) * 1px) var(--SmartThemeShadowColor) !important;
  }

  .mes .mesIDDisplay, .mes .tokenCounterDisplay, .mes .mes_timer {
    position: absolute !important;
    left: calc(var(--info-block-base-left) + var(--metadata-horizontal-offset)) !important;
    margin: 0 !important;
    z-index: 5 !important;
  }
  
/*
  METADATA STACKING NOTE:
  Each item is positioned using the start-top and line-height.
  If you disable an item, adjust the `* N` multiplier for the items below it.
*/
  .mes .mesIDDisplay { top: calc(var(--metadata-start-top) + (var(--metadata-line-height) * 0)) !important; }
  .mes .tokenCounterDisplay { top: calc(var(--metadata-start-top) + (var(--metadata-line-height) * 1)) !important; }
  .mes .mes_timer { top: calc(var(--metadata-start-top) + (var(--metadata-line-height) * 2)) !important; }


/* --- Step 5: MESSAGE CONTENT & BUTTONS --- */
/* The main text area and the robustly positioned buttons. */
/* ------------------------------------------------------- */
  .mes .mes_text {
    padding-top: 55px !important; /* padding of where text starts */
    padding-right: 15px;
    padding-bottom: 10px;
    margin-left: 1px; /* Negative values move it further left */
    font-size: 16px;
    order: 2; 
	position: relative;
  }

  /* Reasoning block styling with independent positioning */
  .mes .mes_reasoning_details {
    margin-top: 35px !important;
    position: relative !important;
	margin-bottom: -30px;
	z-index: 4 !important; 
  }

  /* Reasoning header block  */
  .mes .mes_reasoning_header_block {
    width: var(--reasoning-header-width) !important;
    max-width: var(--reasoning-header-width) !important;
    position: relative !important;
	min-height: 28px;       /* Lower the block's min height */
    padding: 0;     
  }
		
  /* Shrink reasoning header and align chevron with title */
  .mes .mes_reasoning_header {
   	background-color: var(--SmartThemeEmColor);
    min-height: 22px !important;
    line-height: 1 !important;
    font-size: 14px !important;
    
}  

  /* Reasoning summary container */
  .mes .mes_reasoning_summary {
    position: relative !important;   
    
  }

  /* Reasoning actions - absolutely positioned like our main buttons */
  .mes .mes_reasoning_actions {
    position: absolute !important;
    top: var(--reasoning-actions-offset) !important;
    right: var(--reasoning-actions-right-offset) !important;
    z-index: 4 !important; /* Keep below our edit buttons */
    width: auto !important;
    margin: 0 !important;
  }

  /* Individual reasoning edit state buttons - remove the ineffective rules */
  /* These buttons are controlled by their parent .mes_reasoning_actions positioning */

  /* Style the reasoning textarea with fixed positioning */
  .mes .reasoning_edit_textarea {
    margin-right: var(--reasoning-textarea-right-margin) !important;
    padding-right: 10px !important; /* text margin in edit */
	margin-bottom: -25px !important; /* edit margin of reasoning text area only */ 
	margin-top: 55px !important;
    width: calc(100% - var(--reasoning-textarea-right-margin) + 25px) !important;/* edit box margin */
    resize: vertical !important;
    min-height: 60px !important;
    max-width: none !important; /* Allow full width calculation */
  }

  /* Reasoning content area */
  .mes .mes_reasoning {
    padding-right: var(--reasoning-textarea-right-margin) !important;
    margin-right: 0px !important; /* Changes width of reasoning text area */
	margin-bottom: -30px !important; /* padding bt reasoning text and mes text */
  }

  /* --- REASONING BLOCK STATE-AWARE STYLING --- */
  /* Based on SillyTavern's sophisticated state system */
  /* ------------------------------------------------ */


  /* Adjust button positioning when in different states */
  .mes_reasoning_details:has(.reasoning_edit_textarea) .mes_reasoning_actions {
    top: calc(var(--edit-buttons-top-offset) + var(--reasoning-edit-top-compensation)) !important;
    right: calc(var(--edit-buttons-right-offset) + var(--reasoning-edit-right-compensation)) !important;
  }

  /* THE BUTTONS FIX: Buttons are now positioned using flexbox,
     making them independent of the avatar's size. */
  .mes .mes_buttons {
    order: 1; /* Buttons appear above the text */
    align-self: flex-end; /* Align to the right */
    position: absolute !important;
    z-index: 5 !important;
    top: var(--buttons-top-offset) !important;
    right: var(--buttons-right-offset) !important;
    left: unset !important;
    margin-top: 0; /* Removed margin-top */
    margin-right: 0; /* Removed margin-right */
  }

  .mes .mes_edit_buttons {
    position: absolute !important;
    z-index: 5 !important;
    top: var(--edit-buttons-top-offset) !important;
    right: var(--edit-buttons-right-offset) !important;
  }

/* --- Step 6: ADAPTIVE & THEME-SPECIFIC STYLING --- */
/* Rules for different chat modes and swipe actions.   */
/* --------------------------------------------------- */

  /* Dynamic border-radius rules for different ST themes */
  .mes .avatar img{ border-radius: 10px !important;}
    body:not(.bubblechat) .mes .avatar img,
    body.documentstyle .mes .avatar img { border-radius: 0 !important; }

  .mes::before { border-radius: 0 5px 0 0 !important; }
    body:not(.bubblechat) .mes::before,
    body.documentstyle .mes::before { border-radius: 0 !important; }

  /* Spacing for swipe actions etc. */
  .swipe_right, .swipe_left { bottom: 19px;}
  .swipe_left { left: 5px; }
  .last_mes .mes_block { padding-bottom: 28px; }